<?php

// +----------------------------------------------------------------------
// | FileName:   HomeController.class.php
// +----------------------------------------------------------------------
// | Dscription:   前台基类控制器
// +----------------------------------------------------------------------
// | Date:  2017/7/31 13:32
// +----------------------------------------------------------------------
// | Author: showkw <showkw@163.com>
// +----------------------------------------------------------------------


namespace  Home\Controller;

use Home\Controller\BasketController;

class WalletController extends BasketController
{

    //初始化
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//		!is_login() && redirect(U('Home/Account/login'));
        $this->_model = D( 'User' );
        //dump(session());
        !is_login() && redirect( U( 'Home/Account/login' ) );
        $user_id = session( 'userId' );

        $userType = session('userType');
        if( $userType == 1 ){
            $key = 'ssid_'.$user_id;
            if(S($key)){
                $ssid = S($key);
                if( $this->ssid !== $ssid ){
                    session(null);
                    S($key,null);
                    redirect(U('Home/Account/login', ['isRelogin'=>1]));
                }
            }
        }

        $order_m=new \Home\Controller\OrderController();//企业子账号信息
        $companySons=$order_m->companySons();
        if($companySons['error']==0){
            $users=$companySons['data'];
            $user_id=['in',$users];
        }

        //查询用户待付款订单条数
        $noPay_list = D( 'order' )->where( [ 'user_id' => $user_id, 'pay_status' => 0, 'order_status'=>['in',[0,1]] ] )->select();
        $noPayNum = count($noPay_list);
        $this->assign('noPayNum', $noPayNum);

        //查询待发货条数
        $noShip_list = D( 'order' )->where( [ 'user_id' => $user_id, 'ship_status' => 0, 'order_status'=>['in', [0,1,2]] ] )->select();
        $noShipNum = count($noShip_list);
        $this->assign('noShipNum', $noShipNum);

        //查询待收货条数
        $noDelivery_list = D( 'order' )->where( [ 'user_id' => $user_id,'order_status'=>['in', [0,1,2]], 'ship_status' =>['in', [1,2,3]]  ] )->select();
        $noDeliveryNum = count($noDelivery_list);
        $this->assign('noDeliveryNum', $noDeliveryNum);

        //查询待评价条数
        $noRelease_list = D( 'order' )->where( [ 'user_id' => $user_id, 'order_status' => 3, 'is_comment'=>1 ] )->select();
        $noReleaseNum = count($noRelease_list);
        $this->assign('noReleaseNum', $noReleaseNum);
    }

    /**
     * @desc 对私的银行转帐申请确认
     *
     */
    public function customerWalletAddRequest(){
        if(IS_AJAX){
            $request=I('post.');
            $result=D('Wallet/Wallet')->addWalletAccountImg($request);
            print_r($result);
        }
    }

    /**
     * @desc 积分入账对私钱包
     *
     */
     public function integralToWallet(){
         if(IS_AJAX){
             $request=I('post.');
             $userId=session('userId');
             $userId=136;
             $integral=250000;
             $result=D('Wallet/Integral')->integralToWallet($userId,$integral);
             die(json_encode($result));
         }
     }

    /**
     * @desc 客户提交理财
     *
     */
    public function customerRequestFinancial(){
        if(IS_AJAX){
            $request=I('post.');
            $result=D('Wallet/Wallet')->customerRequestFinancial($request);
            die(json_encode($result));
        }
    }

    /**
     * @desc 客户活期利息
     *
     */
    public function test(){
        $request=I('post.');
        $userId=session('userId');
        $result=D('Wallet/Wallet')->allCustomerfinancialToAccount();

        die(json_encode($result));
    }

    /**
     * @desc 个人钱包
     *
     */
    public function wallet(){
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:C('PAGE_PAGESIZE');
        $user_id=session('userId');

        $wallet=D('Wallet/Wallet');
        $list=$wallet->customerWallet($user_id);

        $list['page'] = $page;
        $list['pageSize'] = $pageSize;
        $this->assign('request',$request);
        $this->assign('list',$list['data']['list']);
//        $this->display();
    }

    /**
     * @desc 钱包帐目列表
     *
     */
    public function walletAccount(){
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:C('PAGE_PAGESIZE');
        $where=[];
        $user_id=session('userId');
        $wallet=M('wallet','wa_')->field('id,type,ampunt_allow_pay,status')->where(['user_id'=>$user_id])->select();
        if($wallet){
            foreach($wallet as $k=>$v){
                $whereAccount[]=$v['id'];
            }
            $wallet=D('Wallet/Walletaccount');
            $list=$wallet->walletAccountList(['wallet_id'=>['in',$whereAccount]],$page,$pageSize);
        }

        $list['page'] = $page;
        $list['pageSize'] = $pageSize;
        $this->assign('request',$request);
        $this->assign('list',$list['data']['list']);
//        $this->display();
    }

    /**
     * @desc 钱包理财列表
     *
     */
    public function walletFinancialList(){
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:C('PAGE_PAGESIZE');
        $user_id=session('userId');
        $where=['user_id'=>$user_id];

        $wallet=D('Wallet/Wallet');
        $list=$wallet->walletList($where);
        $list['page'] = $page;
        $list['pageSize'] = $pageSize;
        $this->assign('request',$request);
        $this->assign('list',$list);
//        $this->display();
    }

    /**
     * @desc 个人钱包开通
     *
     */
    public function customerRegisterWallet(){
        if(IS_AJAX){
            $request=I('post.');
            $preg='/^1[\d]{10}$/';
            if((int)preg_match($preg,$request['mobile'])!==1) die(json_encode(['error'=>2,'msg'=>'手机号码错误']));

            $user_id=session('userId');
            $result=D('Wallet/Wallet')->customerRegisterWallet($user_id);
            $password=$result['data'];
            if($result['error']!==0) die(json_encode($result));

            //发送密码到绑定的手机号码上
            $mobile=$request['mobile'];
            $content= '【玖隆芯城】亲爱的用户,您的钱包初始支付密码：'.$password.'，请妥善保管';
            $active='companySon';
            $this->sendSms($mobile,$content,$active);

            die(json_encode($result));
        }
    }

    /**
     * @desc 顾客积分
     *
     */
    public function integralList(){
        $session=session();
        $where=[
            'user_id'=>$session['userId'],
        ];
        $list=D('Wallet/Integral')->integralList($where);
        $integral=$list['data']['list'][0];
        $integral['customer_name']=$session['userInfo']['user_name'];

        $this->assign('list',$integral);
//        $this->display();
    }

 /**
     * @desc 判断是否满足积分规则
     *array arr 产品ID数组  [good_id][type]
     * 特殊积分优先普通积分规则  特殊积分（101） 普通积分（1 21 41）
     */
    public function returnIntegral($arr){
        $return=[];
        foreach ($arr as $v){
            $cateal=M('product')->where(['id'=>$v])->find();
            $where[0]=[
                ['_string'=>"FIND_IN_SET($v, p_signs)"],
                ['_string'=>"FIND_IN_SET($cateal[cate_id], cate_all)"],
                '_logic'=>'OR'
            ];
            $where['start_time']=['ELT',date("Y-m-d H:i:s",time())];
            $where['end_time']=['EGT',date("Y-m-d H:i:s",time())];
            $where['status']=1;
            //特殊规则
            $where['type']=101;
            $specialRules=M('integral_rule','wa_')->where($where)->find();
            //$return='';
            if(!$specialRules){
                $where['type']=['IN',[1,21,41]];
                $generalRules=M('integral_rule','wa_')->where($where)->select();
                if($generalRules){
                    $ids = array_column($generalRules, 'id');
                    $where['id']=["not in",$ids];
                }
                unset($where[0]);
                $generalRules=M('integral_rule','wa_')->where($where)->select();
                // if(!$generalRules) $return[$v]=[];
                foreach($generalRules as $g_v){
                    $return[$v][$g_v['type']]=$g_v;
                }
            }else{
                $return[$v][101]=$specialRules;
            }
        }
        return $return;
    }






}