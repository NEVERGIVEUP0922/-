<?php

// +----------------------------------------------------------------------
// | FileName:   SolutionController.class
// +----------------------------------------------------------------------
// | Dscription:   方案中心
// +----------------------------------------------------------------------
// | Date: 2018年9月11日11:42:47
// +----------------------------------------------------------------------
// | Author: kk <1343188487@qq.com>
// +----------------------------------------------------------------------
namespace Home\Controller;
//use Home\Controller\HomeController;
//use Home\Model\SolutionConverseModel;
//use Home\Model\SolutionProviderModel;
use Home\Model\SolutionDesiredModel;
use Common\Controller\Upload2Controller as Upload;
//use Home\Model\SolutionVipModel;
//use Home\Model\UserModel;
use Home\Model\SolutionModel;

//use Think\Model;
use EES\System\Redis;

class SolutionController extends HomeController
{
	use Upload;
	protected $pageModel='';
	protected $oss_prefix;
	protected $oss_suffix;
	protected function _initialize()
	{
		parent::_initialize();  //TODO: Change the autogenerated stub
		header('X-Frame-Options:SAMEORIGIN');
		if(IS_AJAX){
			header('Content-Type:application/json; charset=utf-8');
		}
		//oss方案前后缀
		$this->oss_prefix = C("access_oss.prefix");
		$this->oss_suffix = C("access_oss.suffix");
		//登录验证
//		if (empty($_SESSION['userId'])) {
//			$this->redirect('Account/login');
//		}
//		$msg_type = ['audit','conversing','conversed'];//审核动作,接洽动作(洽谈内容),被洽谈动作(是否接受洽谈)
		$uid  = session('userId');
		$data = D('Home/SolutionNotify')->get_msg($uid);
		if($data)$this->assign('msg_data',$data);
		$mysol_a  = M('SolutionProvider')->where(['uid'=>$_SESSION['userId']])->count();
		$mysol_b  = M('SolutionDesired')->where(['uid'=>$_SESSION['userId']])->count();
		$converNum= M('SolutionConverse')->where(['need_id'=>$_SESSION['userId'],'con_auth'=>0])->count();
		if($mysol_b)	$this->assign('mysol_b',$mysol_b);
		if($mysol_a)	$this->assign('mysol_a',$mysol_a);
		if($converNum) $this->assign('converNum',$converNum);

		//oss文件访问前、后缀
		$this->assign('prefix',$this->oss_prefix);
		$this->assign('suffix',$this->oss_suffix);
	}

	//	供应方案展示
	public function provider()
	{
		if(IS_GET){
			$request = I('get.');
//			print_e($request);die;
			//已收藏(情况);大分类的类型;关键词和小分类信息;
			$res = $this->solution2($request);
			$list= $this->hotAndNew('solutionProvider');//热门榜单数据
			$soltypes	= $this->solTypes();
			if($_SESSION['userId']){
				$infoCollect= $this->checkCollect($_SESSION['userId'],'','',3);
				foreach($res as $k=>&$v){
					foreach($soltypes as $k2=>$v2){
						if($v['types']==$v2['id']){
							$v['types_id'] = $v2['id'];
							$v['types']	= $v2['types'];
						}
					}
					foreach($infoCollect as $key=>$value){
						if($v['pro_sn']==$value['sol_sn']){
							$v['collected'] = $value['collected'];
						}
					}
				}
			}else{
				foreach($res as $k=>&$v){
					foreach($soltypes as $k2=>$v2){
						if($v['types']==$v2['id']){
							$v['types_id'] = $v2['id'];
							$v['types'] = $v2['types'];
						}
					}
				}
			}
			$req = [];
			if($request['keyword'] == 'jl_self'){
				$req['keyword'] = '玖隆芯城';
			}else{
				$req['keyword'] = $request['keyword']?$request['keyword']:'';/*关键字*/
			}
			$req['types']= $request['types']?$request['types']:"";/*方案类型*/
			$req['sork']	 = $request['sork']?$request['sork']:'pubtime';/*排序判断标准*/
			$this->assign('req',$req);//请求数据
			$this->assign('request',$request);//请求原生数据(备用)
			$this->assign('soltypes',$soltypes);
			$this->assign('isPlanCenter','1');
			$this->assign('list',$list);
			$this->assign('res', $res);//查询数据
			$this->assign('proType',1);
			$this->display('Solution/providerList');
		}
	}
	//	需求方案展示
	public function desired(){
		if(IS_GET){
			//展示需求方案列表
			$request = I('get.');
			$request['type2'] = 2;
			$res = $this->solution2($request);
			$soltypes	= $this->solTypes();
			$infoCollect= $this->checkCollect($_SESSION['userId'],'','',3);
			foreach($res as $k=>&$v){
				$v['delivery'] =substr($v['delivery'],0,10);
				$v['pubtime']  =substr($v['pubtime'],0,10);
				foreach($soltypes as $k2=>$v2){
					if($v['types'] ==$v2['id']){
						$v['types']=$v2['types'];
					}
				}
				foreach($infoCollect as $key=>$value){
					if($v['desir_sn']==$value['sol_sn']){
						$v['collected']=$value['collected'];
					}
				}
			}
			$req = [];
			$req['keyword'] = $request['keyword']?$request['keyword']:'';/*关键字*/
			$req['types']= $request['types']?$request['types']:"";/*方案类型*/
			$req['sork']	 = $request['sork']?$request['sork']:'pubtime';/*排序判断标准*/
			$req['pub_status'] =$request['pub_status']?$request['pub_status']:1;/*发布状态判断标准*/
			$this->assign('req',$req);
			//统计数据(待)
			$soltypes= $this->solTypes();
			$this->assign('soltypes',$soltypes);
			$list =$this->hotAndNew('solutionDesired');
			$this->assign('list',$list);
			$this->assign('res', $res);//查询数据
			$this->assign('request', $request);//请求数据
			$this->assign('desirType',1);
            $this->assign('isPlanCenter','1');
            $this->display('Solution/desiredList');
		}
	}
	//	需求上传(暂时废弃)
	public function desiredW()
	{
		if(IS_GET){
			//需求方案填写界面
			$userId   = I('session.userId');
			//print_e($userId);
			//获取联系人信息
			$userInfo = M('user')->alias("u")->join("dx_user_company uc on uc.user_id=u.id")->where('u.id='.$userId)->find();
			//echo M()->getLastSql();
			$contact =[];
			$contact['userName'] = $userInfo['user_name'];
			$contact['userMobile'] = $userInfo['user_mobile'];
			$contact['company'] = $userInfo['company_name'];
			print_e($contact);
			//展示数据到前台数据框
			/*$this->assign('contact',$contact);
			$this->display('solution\desiredW');*/
		}elseif(IS_POST){
			$res = M()->create();
			print_e($res);die;

			//发布需求方案
			$request= I('post.');
			//数据验证(只有手机验证,其他待补充)
			$mobile = $request['mobile'];
			$temp   = isMobile2($mobile);
			if(!$temp){
				print_e(['errror'=>0,'msg'=>'手机号格式错误']);
			}
			$desirSn= "D".rand(111,999).time();//生成需求方案编号()
			$arr    = [];//组装入库数据;
			$arr['desir_sn'] = $desirSn;
			foreach($request as $key => $v){
				if(isset($v)&&$v != null ){ $arr[$key] = $v;}
			}
			if($request['draf']==1){//保存草稿的操作会在提交的数据上添加这条标识,此后这条记录只会展示给用户自己
				$arr['draf'] =1;
			}else{
				$arr['draf'] =0;
			}
			$desire = D('SolutionDesired');
			//新增写入的字段
			$feilds = ['desir_sn','desir_name','types','desir_desc','deliverty','budget','mobile','company','qq','wechat'];
			$res    = $desire->field($feilds)->add($arr);

			print_e($res);die;
		}elseif(IS_AJAX){
			//修改数据库---管理员审核(后台写)
			//修改数据库---用户修改(待定)用户提交的数据(方案id,数据)
			//修改数据库---收藏(待定)
			$request =I('post.');

			$res = M('SolutionDesired')->field('browse,collection');
		}

	}
	//  供应方案详情
	public function proDetail()
	{
		$sol_id = I('get.id');
		$uid    = I('session.userId');
//		$res    = M('solution_provider')->where(['id'=>$sol_id,'publish_status'=>1])->find();
		$where  = ['P.id'=>$sol_id,'P.publish_status'=>1];
		$field	= '*,P.id,P.sys_uid';
		$join	= 'left join dx_product as B on P.pcba_list = B.p_sign';
		$res    = M('solution_provider')->alias("P")->join($join)->where($where)->field($field)->find();

		if(empty($res)){
			$this->error('很抱歉,该方案已经无法查询',U('Home/Solution/provider'),1);
		}
//		$res['pro_desc']=htmlspecialchars_decode($res['pro_desc']);//转义
		if(!empty($res)){
			$field = 'qq,wechat,mobile,nick_name';
			$vipInfo = M("solution_vip")->where('uid='.$res['uid'])->field($field)->find();
			if($vipInfo){
				$res = array_merge($vipInfo,$res);
			}
		}
		if(!empty($uid)){
			//是否收藏
			$soltypes	= $this->solTypes();
			$infoCollect= $this->checkCollect($_SESSION['userId'],'','',3);
			foreach($soltypes as $k2=>$v2){
				if($res['types']==$v2['id']){
					$res['types']=$v2['types'];
					$res['types_id'] = $v2['id'];//保留分类id
				}
			}
			foreach($infoCollect as $k1=>$v1){
				if($res['pro_sn']==$v1['sol_sn']){
					$res['collected']=$v1['collected'];
				}
			}
		}
		$this->updataBrowse($uid,$res);
//		print_e($res);die;
		$this->assign('res',$res);
//      $this->assign('isPlanCenter','1');

        $this->display('Solution/proDetail');
	}
	//	需求方案详情
	public function desirDetail()
	{
		$request = I('get.');
		$desir_id= $request['sol_id'];//需求方案id
//		$desir_sn= $request['sol_sn'];
		$uid	 = I('session.userId');//浏览的客户id
		/*判断:1.是否本人查看 2.洽谈结果 0和洽谈中,不展示联系方式*/
		$con_res = M('solution_converse')->where(['pro_id'=>$uid,'desir_id'=>$desir_id])->field('con_auth,need_id')->find();

		$field   = 'id,jl_self,desir_sn,desir_name,desir_desc,types,delivery,pubtime,publish_status,budget,browse,collection,linkman,company,uid';//路人甲或者没有接受洽谈
		$res 	 = M('solution_desired')->where(['id'=>$desir_id])->field($field)->find();
		$vipInfo = M("solution_vip")->where('uid='.$res['uid'])->field('nick_name,mobile,qq,wechat')->find();
		if(!empty($vipInfo) && ((!empty($con_res)&& $con_res['con_auth']==1)||$res['uid']== $uid) ){//发布者本人或者已接受
			//print_e($vipInfo);die;
			$res= array_merge($res,$vipInfo);
		}
		/*检查收藏*/
		if(!empty($uid)){
			//是否收藏
			$soltypes	= $this->solTypes();
			$infoCollect= $this->checkCollect($_SESSION['userId'],'','',3);
			foreach($soltypes as $k2=>$v2){
				if($res['types']==$v2['id']){
					$res['types']=$v2['types'];
				}
			}
			foreach($infoCollect as $k1=>$v1){
				if($res['desir_sn']==$v1['sol_sn']){
					$res['collected']=$v1['collected'];
				}
			}
		}
		$this->updataBrowse($uid,$res,2);
//		print_e($res);print_e($con_res);die;
		$this->assign('res',$res);
        $this->assign('isPlanCenter','1');
		$this->display('Solution/desirDetail');
	}
	//	更新浏览量和个人记录
	//	用户的id,方案的查找详情$res,方案类型(供应1,需求2)type
	protected function updataBrowse($uid,$res,$type=1){
		//添加个人浏览记录
		$arr['sol_id']  = $res['id'];
		$arr['sol_type']= $type;
		$arr['uid']		= $uid;
		if($type==1){
			$arr['sol_sn'] = $res['pro_sn'];
		}elseif($type==2){
			$arr['sol_sn'] = $res['desir_sn'];
		}

		$browse_temp = M('solution_browse')->where($arr)->find();
		$time1 = strtotime($browse_temp['update_time']);
		$time2 = date('d',$time1);
		$time3 = date('d',time());
		$time0 = $time3 - $time2;
//		getsql();print_e($browse_temp);
		if(!$browse_temp&&!empty($uid)){/*添加个人浏览记录*/
			$temp2 = M('solution_browse')->add($arr);
		}elseif($browse_temp && $time0 >=1){/*更新浏览记录*/
			$temp2 = M('solution_browse')->where($arr)->save(['browse_num'=>$browse_temp['browse_num']+1]);
		}
//		getsql();dump($temp2);die;
		//更新浏览量
		if(isset($res['browse'])||!empty($res['browse'])){
			$user_IP = ($_SERVER["HTTP_VIA"]) ? $_SERVER["HTTP_X_FORWARDED_FOR"] : $_SERVER["REMOTE_ADDR"];
			$user_IP = ($user_IP) ? $user_IP : $_SERVER["REMOTE_ADDR"];
			$redis 	 = Redis::getInstance();
			$t 		 = (int)time();
			$key	 = $user_IP.$arr['sol_sn'];
			$browse_temp2= $redis->get($key);
			if(empty($browse_temp2)){
				$_browse = $res['browse']+1;
				if($type==1){
					$temp1   = M('solution_provider')->where('id='.$arr['sol_id'])->save(['browse' => $_browse]);//浏览量+1
				}elseif($type==2){
					$temp1   = M('solution_desired')->where('id='.$arr['sol_id'])->save(['browse' => $_browse]);//浏览量+1
				}
				$redis->set($key, $t, 3600 * 24);
			}
		}
	}
	//	洽谈(接洽过的内容,拒绝或接受)
	public function converse()
	{
			//登录验证
		if (!IS_AJAX && empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}elseif(!IS_AJAX && empty($_SESSION['userId'])){
			$this->ajaxReturnStatus(999,'请登录');
		}
		$uid =I('session.userId');
		if(IS_GET && !IS_AJAX){/*展示洽谈方案*/
			$request = I('get.');
			//分页限制
			$page = I( 'get.page' ) ? :1;
			$pageSize= I('get.pageSize')?:4;
			$pageNum = 4;
			$limit	 = ($page-1)*$pageSize.",".$pageNum;
			$_model	 = D('SolutionProvider');

			$conversing = $request['conversing'];
			$con_project= D('SolutionConverse');
			if($conversing ==1){/*接洽中的方案(我出报价)*/
				$where['pro_id'] = I('session.userId');
				if(isset($where) && $where){
					$count	= M('SolutionConverse')->where($where)->count();
					if(!empty($count))$show = $_model->pageLimit($count,$pageSize);
					$res	= $con_project->conversing($where,$limit);
//				  	getsql();print_e($res);die;
					if(!empty($res)){
						foreach($res as &$v){//去掉具体的时分秒
						$v['update_time']=substr($v['update_time'],0,10);
						}
					}
					$this->assign('page',$show);
					$this->assign('res',$res);
					$this->display('Solution/conversing');
				}
			}else{/*我的需求方案(别人发起的洽谈)*/
				$request['page']?($fenye['page']=$request['page']):'';
				$request['page']?($fenye['pageSize']=$request['pageSize']):'';
				if($request['all_con']==1){//所有洽谈消息(未处理的)
					$where = ['need_id'=>$_SESSION['userId'],'con_auth'=>0];
					$res   = $con_project->myConverse($where,'','create_time desc','',$fenye);
					$res   = array_sort($res,'desir_sn',1);//sort
				  	//getsql();print_e($request);print_e($res);die;
					$this->assign('res',$res['res']);
					$this->assign('page',$res['page']);
                    $this->assign('sol_position','5');
					$this->display('Solution/myConverse');

				}elseif(isset($request) && $request){
					$where['desir_id']= $request['desir_id'];
					$where['need_id'] = $request['need_id'];
				  	//$where['desir_sn']= $request['desir_sn'];
					$res   = $con_project->myConverse($where,'','create_time desc','',$fenye);
					$this->assign('page',$res['page']);
					$this->assign('res',$res['res']);
					$this->display('Solution/myConverse');
				}else{
					$this->error('洽谈消息错误!',U('Home/solutionVip/vipProvider'));
				}
			}
		}elseif(IS_AJAX){/*接受或者拒绝洽谈*/
			$request = I('post.');
			if(!$request) $this->ajaxReturnStatus(1002,'参数异常');
			//数据处理
			foreach($request as $k=>$v){
				if(empty($v))$this->ajaxReturnStatus(1004,'数据有误!');
			}
			$request2['pro_id']=$request['pro_id'];//提供者id
			$request2['desir_id']= $request['desir_id'];
			$request2['desir_sn']= $request['desir_sn'];
			$con_auth=$request['con_auth'];/*1代表接受,2代表拒绝*/

			if(isset($con_auth) && $con_auth){
				if(!in_array((int)$con_auth,[1,2])){
					$this->ajaxReturnStatus(1003,'参数异常');
				}

				M()->startTrans();//开启事务
				$temp = M('solution_converse')->where($request2)->find();//检查是否有这条洽谈记录
//				dump($temp['con_auth']==$request['con_auth']); print_e($temp);die;
				if(empty($temp)||$temp['con_auth']==$request['con_auth']){
					$this->ajaxReturnStatus(1001,'请求失败');die;
				}
					$msg_data = ['target'=>$temp['desir_id'],'target_type'=>'需求方案','type'=>3];
					$msg  	= M('solution_converse')->where($request2)->save(['con_auth'=>$con_auth]);//接受或拒绝
					$notify = D('solution_notify')	->add_msg($uid,$request2['pro_id'],$msg_data);//添加消息
//					dump($notify);die;

				if(!empty($msg) && $notify){
					M()->commit();
					$this->ajaxReturnStatus(1000,$msg);
				}else{
					M()->rollback();
					$this->ajaxReturnStatus(1002,$msg);
				}
			}else{//查看是否有洽谈的消息
					$where=['need_id'=>$uid,'desir_id'=>$request2['desir_id']];
					$num  = M('solution_converse')->where($where)->count();
					$this->ajaxReturn($num);
			}
		}
	}
	//	洽谈(提交的洽谈,扣次数)
	public function converse2(){
		if(!IS_AJAX){die;}
		if(empty($_SESSION['userId'])){
			$this->ajaxReturnStatus(999,'请登录');
		}
		/*非会员限制*/
		$vip = new SolutionVipController;
		$check_vip =$vip->check_vip();
		//if($check_vip!==2)$this->ajaxReturnStatus(1023,'您目前还不是会员');//会员功能之一(暂时停用)
		if($check_vip===0)$this->ajaxReturnStatus(888,'洽谈需要您的基本信息,请补充!');

		$limited = $this->limit_repeat2(5,'s','conversing');
		if($limited===false) $this->ajaxReturnStatus(1005,'请勿重复操作');
		$request = I('post.');
//		print_e($request);die;
		$arr['pro_id']   = I('session.userId');
		foreach($request as $k=>$v){
			if(empty($v))$this->ajaxReturnStatus(1001,'信息不完整请重新填写');
		}
		$arr['price']    = $request['yusuan'];
		$arr['con_time'] = $request['zhouqi'];
		$arr['con_idea'] = $request['silu'];
		$arr['desir_sn'] = $request['sol_sn'];
		$re    = M('solution_desired') ->field('uid,id,browse')->where(['desir_sn'=>$arr['desir_sn']])->find();
		if(empty($re))$this->ajaxReturnStatus(1003,'无法发起洽谈,请稍后再试');
		//拼接数据,扣洽谈次数
		$arr['desir_id']= $re['id'];//方案id
		$arr['need_id'] = $re['uid'];//发布者id
		if(empty($arr['need_id']) || empty($arr['desir_id'])){
			$this->ajaxReturnStatus(1005,'数据有误!');
		}
		M()->startTrans();
		$where1 = ['pro_id'=>$arr['pro_id'],'desir_sn'=>$arr['desir_sn']];
		$field1 = 'pro_id,need_id,desir_id,desir_sn,price,con_time,con_idea';
		$temp3	= M('solution_converse')->where($where1)->find();
		if(!empty($temp3)){
			$res= M('solution_converse')->where($where1)->field($field1)->save($arr);
		}else{
			$res= M('solution_converse')->where($where1)->field($field1)->add($arr);
		}
		if(!$res){
			M()->rollback();
			$this->ajaxReturnStatus(1005,'服务器忙,请稍后再试!');
		}
		//添加积分
		objectIntergral($arr['pro_id'],113,'洽谈');
		//添加消息记录
		$msg_data = ['target'=>$arr['desir_id'],'target_type'=>'需求方案','type'=>2];
		$notify   = D('solution_notify')->add_msg($arr['pro_id'],$re['uid'],$msg_data);
		//添加浏览记录(未完成)
//		$myHistory= $this->updataBrowse($_SESSION['userId'],['id'=>$re['id']],2);

		if(!$notify ) {
//			getsql();
			M()->rollback();
			$this->ajaxReturnStatus(1006,'提交不成功!');
		}
		//更新浏览量(洽谈时加一)
		if( $re['uid'] != $_SESSION['userId']){
			$add_browse = M('solution_desired')->where('id='.$re['id'])->save(['browse' => ($re['browse']+1)]);//浏览量+1
			if(!$add_browse){
				M()->rollback();
				$this->ajaxReturnStatus(1007,'提交不成功!');
			}
		}
		//	会员功能之一(暂时停用,不能删)
//		$temp	= M('solution_vip')->where('uid='.$arr['pro_id'])->field('con_num')->find();
//		if($res===0){
//			M()->rollback();
//			$this->ajaxReturnStatus(1004,'已经提交,请勿重复操作');
//		}elseif(empty($res)||empty($temp)){
//			M()->rollback();
//			$this->ajaxReturnStatus(1003,'洽谈失败,请稍后再试');
//		}
//		$temp  = (int)$temp['con_num']-1;
//		$rez   = M('solution_vip')->where('uid='.$arr['pro_id'])->field('con_num')->save(['con_num'=>$temp]);
//		if(empty($rez)||empty($res)){
//			M()->rollback();
//			$this->ajaxReturnStatus(1002,'无法发起洽谈,请稍后再试');
//		}else{
//			M()->commit();
//			$this->ajaxReturnStatus(1000,'恭喜,提交成功!');
//		}
		//临时
		if($res===0){
			M()->rollback();
			$this->ajaxReturnStatus(1004,'已提交!');
		}elseif(empty($res)&&$res!==0){
			M()->rollback();
			$this->ajaxReturnStatus(1003,'洽谈失败,请稍后再试!');
		}else{
			M()->commit();
			$this->ajaxReturnStatus(1000,'恭喜您,提交成功!');
		}
	}
	//	浏览历史
	public function myBrowse()
	{
		//登录验证
		if (empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}
		$request = I('get.');
//		$_model  = new SolutionProviderModel();
		$rez	 = D('solution_provider')->myBrowseHistory($_SESSION['userId'],$request,1);
		if($rez !== false ){
			$show = $rez['show'];
			$res  = $rez['res'];
		}
		$this-> assign('page',$show);
		$this-> assign('res',$res);
        $this-> assign('isPlanCenter','1');
		$this-> display('Solution/myBrowse');
	}
	//	(分开的)浏览历史
	private function myBrowse2($request,$solType)
	{
		//登录验证
		if (empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}
		$rez	 = D('solution_provider')->myBrowseHistory2($_SESSION['userId'],$request,1,'',$solType);
		if($rez !== false ){
			$show = $rez['show'];
			$res  = $rez['res'];
		}
		$this-> assign('page',$show);
		$this-> assign('res',$res);
		$this-> assign('solType_b',$solType);
		$this-> assign('isPlanCenter','1');
		$this-> display('Solution/myBrowse');
	}
	//	浏览历史(供应)
	public function myBrowse3()
	{
		$request = I('get.');
		$this->myBrowse2($request,1);
	}
	//	浏览历史(需求)
	public function myBrowse4()
	{
		$request = I('get.');
		$this->myBrowse2($request,2);
	}

	//	收藏列表(供应)
	public function solCollectList()
	{
		//登录验证
		if (empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}
		$uid  = I('session.userId');
		$req  = I('get.');
		//分页限制
		$page = $req['page'] ? :1;
		$pageSize= $req['pageSize']?:4;
		$pageNum = 4;
		$limit	 = ($page-1)*$pageSize.",".$pageNum;
		$where  = ['C.uid='.$uid,'C.collected=1'];
		$field1 = ['*,C.id,P.uid,C.create_time'];
		$res	= M('solution_collect')->alias('C')
			->join('right join dx_solution_provider as P on P.pro_sn = C.sol_sn')
			->join('left join dx_solution_vip as V on V.uid = P.uid')
			->field($field1)->where($where)->order('C.create_time desc')->limit($limit)->select();
		$count  = M('solution_collect')->alias('C')
			->join('right join dx_solution_provider as P on P.pro_sn = C.sol_sn')
			->where($where)->count();
		$res =array_slice($res,($page-1)*$pageSize,$pageNum);
		$soltypes = $this->solTypes();
		foreach($res as $k=>&$v){
			foreach($soltypes as $k2=>$v2){
				if($v['types']==$v2['id']){
					$v['types']=$v2['types'];
				}
			}
		}
		$_modal= new SolutionDesiredModel();
		$show  = $_modal->pageLimit($count,$pageSize);
		$this->assign('page',$show);
		$this->assign('res',$res);
		$this-> assign('solType_c',1);
        $this->assign('isPlanCenter','1');
		$this->display('Solution/myCollect');
		//处理数据,列表
		//待改进方向->排序,判断/方案是否已停止发布的判断
	}
	//	收藏列表(需求)
	public function solCollectList2()
	{
		//登录验证
		if (empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}
		$uid  = I('session.userId');
		$req  = I('get.');
		//分页限制
		$page = $req['page'] ? :1;
		$pageSize= $req['pageSize']?:4;
		$pageNum = 4;
		$limit	 = ($page-1)*$pageSize.",".$pageNum;
		$where   = ['C.uid='.$uid,'C.collected=1'];
		$field2  = ['*,C.id,D.uid,C.create_time'];
		$res = M('solution_collect')->alias('C')
			->join('right join dx_solution_desired  as D on D.desir_sn= C.sol_sn')
			->join('left join dx_solution_vip as V on V.uid = D.uid')
			->field($field2)->where($where)->order('C.create_time desc')->limit($limit)->select();
		$count =  M('solution_collect')->alias('C')
			->join('right join dx_solution_desired  as D on D.desir_sn= C.sol_sn')
			->where($where)->count();
//		$res =array_slice($res,($page-1)*$pageSize,$pageNum);
		$soltypes = $this->solTypes();
		foreach($res as $k=>&$v){
			foreach($soltypes as $k2=>$v2){
				if($v['types']==$v2['id']){
					$v['types']=$v2['types'];
				}
			}
		}
//		$_modal= new SolutionDesiredModel();
		$show  = D('SolutionDesired')->pageLimit($count,$pageSize);
		$this->assign('page',$show);
		$this->assign('res',$res);
		$this-> assign('solType_c',2);
		$this->assign('isPlanCenter','1');
		$this->display('Solution/myCollect');
		//处理数据,列表
		//待改进方向->排序,判断/方案是否已停止发布的判断
	}
	//	添加收藏
	public function solCollectAdd()
	{
		$limit1 = $this->limit_repeat2(2,'s','collected');
		if($limit1===false)$this->ajaxReturnStatus(1005,'太快了,休息一下吧!');
		if(IS_AJAX){
			$uid =I("session.userId");
			if(!$_SESSION['userId']) $this->ajaxReturnStatus(999,'请登录!');
			$request= I('get.');//获取前台发送过来的方案id,编号;
			$sol_sn = $request['sol_sn'];//方案编号
			$sol_id = $request['sol_id'];//作者
//			$uid= $request['id'];//收藏人()
			$collected = $request['collected'];
			if(!isset($collected,$sol_sn,$sol_id)||!$sol_sn||!$sol_id){//验证数据完整性
				$this->ajaxReturnStatus(1002,'数据不完整!');
			}
			//检查是否已收藏
			$isCheck = $this->checkCollect($uid,$sol_id,$sol_sn,1);
			$arr = [$uid,$sol_sn,$sol_id,$collected];
			$bit = substr($sol_sn,0,1);
			switch($bit){//方案大类型:1代表供应,2代表需求
				case "D":
					$arr['sol_type'] = 2;
					$sol_table = D('solution_desired');
					break;
				case "P":
					$arr['sol_type'] = 1;
					$sol_table = D('solution_provider');
					break;
				default:$this->ajaxReturnStatus(1010,'数据验证不通过!');die;
			}
			M()->startTrans();
			//添加收藏
			$where0 =['id'=>$sol_id];
			$sol_filed= 'uid,collection';
			$sol_info = $sol_table->where($where0)->field($sol_filed)->find();

			if($isCheck===0){//更新收藏
				$where = ['uid'=>$uid,'sol_id'=>$sol_id,'sol_sn'=>$sol_sn];
				$arr   = ['collected'=>1];
				$res   = M('solutionCollect')->field("collected")->where($where)->save($arr);
			}elseif($isCheck===null){//添加收藏
				$field = "uid,sol_uid,sol_id,sol_sn,sol_type,collected";
				$arr = ['uid'=>$uid,'sol_uid'=>$sol_info['uid'],'sol_id'=>$sol_id,'sol_sn'=>$sol_sn,'sol_type'=>$arr['sol_type'],'collected'=>$collected ];
				$res = M('solutionCollect')->field($field)->add($arr);
			}else{
				$this->ajaxReturnStatus(1009,'收藏失败!');die;
			}
			$sol_re= $sol_table->where($where0)->save(['collection'=>(1+$sol_info['collection'])]);

			if(empty($sol_info) || $res===false||empty($sol_re)){
				M()->rollback();
				$this->ajaxReturnStatus(1004,'添加收藏失败');
			}else{
				M()->commit();
				$this->ajaxReturnStatus(1000,'收藏成功');
			}
		}
	}
	//	删除收藏
	public function solCollectDelete()
	{
		if(IS_AJAX){
			$uid = I("session.userId");
			if(empty($uid))$this->ajaxReturnStatus(999,'请登录');
			$request = I('post.');
			$sol_sn = $request['sol_sn'];
			$sol_id = $request['sol_id'];
			if(isset($request)&& $request){
				$isCheck = $this->checkCollect($uid,$sol_id,$sol_sn,4);
				if($isCheck['collected']==1){
					$temp_data['collected'] = 0;
					$temp = M('solutionCollect')->field('collected')->where($request)->save($temp_data);
					if($temp===0)$this->ajaxReturnStatus(1011,'已删除');
					$this->ajaxReturnStatus(1000,$temp);

				}else{
					$this->ajaxReturnStatus(1012,'删除失败');
				}
			}
		}
	}
	//	客服咨询
	public function solService()
	{
		$req = I('get.');
		$where	 = ['uid'=>$req['sysInfo']];
		$sysInfo = M('user','sys_')->where($where)->find();
		if($sysInfo){
			$this->ajaxReturnStatus(1000,'',$sysInfo);
		}
	}
	//	检查是否已收藏
	/*
	 * $uid :用户id,
	 * $sol_id:方案id
	 * $sol_sn:方案编号
	 * $isAjax;必须参数;代表返回的类型,1代表ajax返回.2代表模板变量绑定,3代表返回值;
	 * */
	public function checkCollect($uid,$sol_id,$sol_sn,$isAjax=1)
	{
		$where = ['uid'=>$uid,'sol_id'=>$sol_id,'sol_sn'=>$sol_sn];//必须确保每一个参数都有值
		if($isAjax ==3){//(为了)查看个人收藏
			$isCollect = D('solutionCollect')->field('sol_sn,collected')->where(['uid'=>$uid])->select();
//			print_e($isCollect);getsql();die;
			return $isCollect;
		}
		if($isAjax ==4){//(为了)操作收藏夹
			$isCollect = D('solutionCollect')->field('sol_sn,collected')->where($where)->find();
			return $isCollect;
		}
		$isCollect = M('solutionCollect')->field('collected')->where($where)->find();
		if($isCollect['collected'] == 1){//有收藏记录且为1
			if($isAjax===1){
				$this->ajaxReturnStatus(1001,'您已收藏,是否前往查看?');
			}elseif($isAjax===2){
				$this->assign('collected',$isCollect['collected']);
			}
		}elseif(isset($isCollect['collected'])&&$isCollect['collected'] == 0){//有收藏记录但取消了收藏
			if($isAjax===1){
//				print_e(1);
				return 0;
			}elseif($isAjax===2){
				$this->assign('collected',$isCollect['collected']);
			}
		}elseif($isCollect===null){//没有收藏记录
//			print_e(2);
			return $isCollect;
		}else{//查询出错
//			print_e(3);
			return false;
		}
	}

	//	方案展示公共函数2,用于搜索
	public function solution2($request)
	{
		$page     = (isset($request['page'])&&$request['page'])?$request['page']:1;//判断分页
		$pageSize = (isset($request['pageSize'])&&$request['pageSize'])?$request['pageSize']:6/*C('PAGE_PAGESIZE')*/;
		$sork = $request['sork'] ? $request['sork']:'pubtime';//记录排序字段
		$desc = $request['desc'] ? $request['desc']:'desc';//记录顺排序还是倒排序
		$request['where']['types'] = $request['types'];
		$request['where']['like']  = $request['keyword'];
		if($request['where']['like'] == 'jl_self'){//自营判断
			$request['where']['like'] = '';
			$condition['jl_self']= 1;
		}
		$where= $request['where'];
//		if((int)$request['types'] != 999 ){
		if(!empty($request['types'])){
			$condition['types'] = $where['types'];
		}
		//判断大类型(供,需)
		if($request['type1'] == null && $request['type2'] == null){//表示默认的供应方案,
			$condition['pro_name|pro_desc|nick_name|pro_sn'] = ['like','%'.$where['like'].'%'];//搜索条件的组装
			$condition['publish_status']=1;
			$field  = ['*,P.id,P.uid'];//字段.
			unset($condition['types']);
			$temp	= $this->sol_page("SolutionProvider",$condition,$page,$pageSize,$field,$sork,$desc,1);//分页搜索
//			getsql();print_e($temp);
			return $temp;

		}elseif($request['type1'] == 1 && $request['type2'] == null){//1表示供应方案,
			$condition['pro_name|pro_desc|nick_name|pro_sn'] = ['like','%'.$where['like'].'%'];//搜索条件的组装
			$condition['publish_status']=1;
//			$condition['_logic'] ='OR';
			$field  = ['*,P.id,P.uid'];//字段
			$temp	= $this ->sol_page("SolutionProvider",$condition,$page,$pageSize,$field,$sork,$desc,1);//分页搜索
//			getsql();print_e($temp);
			return $temp;

		}elseif($request['type1'] == null && $request['type2'] == 2){//2表示需求方案.
			$condition['desir_name|desir_desc|nick_name|desir_sn'] = ['like','%'.$where['like'].'%'];//搜索条件的组装
			$condition['publish_status']=$request['pub_status']?$request['pub_status']:1;
			$field  = ['*,D.id,D.uid'];//字段
			$temp	= $this->sol_page("SolutionDesired",$condition,$page,$pageSize,$field,$sork,$desc,2);
//			getsql();print_e($temp);die;
			return $temp;
		}
	}

	//  方案类型
	public function solTypes()
	{
		$temp =M('SolutionType')->field('id,types')->select();
		return $temp;
	}

	/*
	 * 方案中心分页方法(暂时只为列表展示使用)
	 * $model (主)表名
	 * $conditionw:where查询条件条件
	 * $page页数
	 * $pageSize,每页的条数
	 * $field ,搜索的字段;
	 * $sork ,排序字段
	 * $desc,倒排还是顺排,默认倒排
	 * 返回值,
	 * */
	public function sol_page($model,$condition,$page,$pageSize,$field,$sork,$desc,$sol_type=1)
	{
		if($sol_type==1){//供应方案
			$totalRows= D($model)->alias('P')->join("left join dx_solution_vip as V on P.uid = V.uid")->where($condition)->count();//查记录总数
			$temp = D($model)->alias('P')
				->join("left join dx_solution_vip as V on P.uid = V.uid")
				->join("left join dx_product as B on P.pcba_list = B.p_sign")//新增型号成交量
				->order($sork.' '.$desc)
				->where($condition)
				->limit(($page-1)*$pageSize,$pageSize)
				->field($field)
				->select();
//		print_e($sork);getsql();print_e($temp);die;

		}elseif($sol_type==2){//需求方案
			$totalRows= D($model)->alias('D')->join("left join dx_solution_vip as V on D.uid = V.uid")->where($condition)->count();
			$temp = D($model)->alias('D')->join("left join dx_solution_vip as V on D.uid = V.uid")->order($sork.' '.$desc)->where($condition)->limit(($page-1)*$pageSize,$pageSize)->field($field)->select();
//			getsql();print_e($temp);die;
		}else{
			return null;
		}
		// 查询满足要求的总记录数
		$Pages = new \Think\Page( $totalRows, $pageSize );// 实例化分页类 传入总记录数和每页显示的记录数

		$totalCount = ceil($totalRows/$pageSize);
		if($totalRows>$pageSize)$show = $Pages->show();// 分页显示输出
		if($page>$totalCount) $page   = $totalCount;
		//print_e($show);die;
		$this->assign( 'page', $show );// 赋值分页输出
		$this->assign( 'count',$totalRows );// 总记录数
		$this->assign( 'p_num', $totalCount );// 总记录数
//		print_e($temp);
//		getsql();die;
		return $temp;
	}

	/*类上(需求方案)*/
	public function sol_page2($model,$condition,$page,$pageSize,$field,$sork,$desc)
	{
		$totalRows= D($model)->where($condition)->count();//查记录总数
		// 查询满足要求的总记录数
		$Pages = new \Think\Page( $totalRows, $pageSize );// 实例化分页类 传入总记录数和每页显示的记录数

		$totalCount = ceil($totalRows/$pageSize);
		if($totalRows>$pageSize)$show = $Pages->show();// 分页显示输出
		if($page>$totalCount) $page   = $totalCount;
		//print_e($show);die;
		$this->assign( 'page', $show );// 赋值分页输出
		$this->assign( 'count',$totalRows );// 总记录数
		$this->assign( 'p_num', $totalCount );// 总记录数

		$temp = D('SolutionProvider')->alias('P')->join("left join dx_solution_vip as V on P.uid = V.uid")->order($sork.' '.$desc)->where($condition)->limit(($page-1)*$pageSize,$pageSize)->field($field)->select();
		return $temp;
	}
	//	最新最热的方案;
	//	参数:方案大分类(供应1.需求2)
	public function hotAndNew($type)
	{
		$temp=[];
		$where1 = ['P.publish_status'=>1];
		$where2 = ['D.publish_status'=>1];
		$msg =$type?$type:'solutionProvider';
		$field1 =['P.id,P.jl_self,P.browse,P.pro_sn,P.pubtime,P.pro_name,V.nick_name'];
		$field2 =['D.id,D.jl_self,D.browse,D.desir_sn,D.pubtime,D.desir_name,V.nick_name'];
		if($msg=='solutionProvider'){
			$temp['new']= M($msg)->field($field1)->alias('P')->join("left join dx_solution_vip as V on P.uid = V.uid")->order('pubtime desc')->limit('10')->where($where1)->select();
			$temp['hot']= M($msg)->field($field1)->alias('P')->join("left join dx_solution_vip as V on P.uid = V.uid")->order('browse desc')->limit('10')->where($where1)->select();
			//getsql();print_e($temp);die;
			return $temp;

		}elseif($msg=='solutionDesired'){
			$temp['new']= M($msg)->field($field2)->alias('D')->join("left join dx_solution_vip as V on D.uid = V.uid")->order('pubtime')->limit('10')->where($where2)->select();
			$temp['hot']= M($msg)->field($field2)->alias('D')->join("left join dx_solution_vip as V on D.uid = V.uid")->order('browse' )->limit('10')->where($where2)->select();
			//getsql();print_e($temp);die;
			return $temp;
		}
	}
	//  查询条件(暂时不用).
	public function searchWhere2($where)
	{
		if(!is_array($where)) return['error'=>1,'msg'=>'where条件错误'];
		$whereSql = [];
		foreach($where as $k =>$v){
			switch(trim($k)){
				case 'like' :
					$whereSql['']  = "%$v%";
					break;
				case 'filed':
					$whereSql[$k]  = $v;
					break;
				case 'soltype':
					$whereSql['types']  = $v;
					break;
				default: $whereSql[$k] = $v['value'];
					break;
			}
		}
		return $whereSql;
	}
//------方案管理中心------------------------------------------------------------------------------------------------------
	//	我的供应方案
	public function myProvider()
	{
		//登录验证
		if (empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}
		//查找我的供应方案
		$uid  = I('session.userId');
		//分页限制
		$page = I( 'get.page' ) ? :1;
		$pageSize= I('get.pageSize')?:4;
		$pageNum = 4;
		$limit	 = ($page-1)*$pageSize.",".$pageNum;

//		$field = ['P.id,P.jl_self,P.pro_sn,P.pro_name,P.synopsis,P.pro_desc,P.types,P.pcbas,P.bom,P.code,P.files,P.browse,P.collection,P.volume,P.check_status,P.uid,P.publish_status,P.draft,P.pubtime,T.types'];
		$field = ['*,P.id,P.uid,P.create_time,P.update_time,T.types'];
		$res   = D('solution_provider')->myProviderInfo('',$field,'',$limit);
//		getsql();
		$count = D('solution_provider')->pageCount();
		$this->pageModel = new SolutionModel();
		$show = $this->pageModel -> pageLimit($count,$pageSize);
		$this->assign('page',$show);
		$this->assign('res',$res);
        $this->assign('sol_position','2');//前台class判断
		$this->display('myProvider');
	}
	//	修改供应方案(展示草稿,结束发布,)
	public function updataProvider(){
		if(IS_GET && !IS_AJAX){
			//登录验证
			if (empty($_SESSION['userId'])) {
				$this->redirect('Account/login');
			}
			$data= I('get.');
			if(empty($data['pro_id']))die($this->error('请求错误'));
			$field = ['id,pro_name,main_model,main_brand,synopsis,pro_desc,types,pcba,pcbas,pcba_list,imgs,bom,code,files,draft,types'];
			$where = ['uid'=>$_SESSION['userId'],'id'=>$data['pro_id'],'draft'=>1];
			$res   = M('SolutionProvider')->where($where)->field($field)->find();
			$types = $this->solTypes();
			if(empty($res) ||empty($types))die($this->error('请求错误'));
			$imgs = $res['imgs'];
			if(!empty($imgs)){
				$res['imgs'] = explode(',',$res['imgs']);
				$imgs2= json_encode($res['imgs']);//(折中方案)为了将数据保存在前端需要json格式
			}else{
				$imgs2=[];
			}
			if($res['pro_desc']){//读取详情文件
				$html	= file_get_contents('.'.$res['pro_desc']);
			}
			$this->breadcrum();
			$this->assign('desc_html',$html);
			$this->assign('sol_types',$types);
			$this->assign('res',$res);
			$this->assign('imgs2',$imgs2);
            $this->assign('isPlanCenter','1');//板块位置标识
			$this->display('Solution/updataProvider');
		}
		if(IS_GET && IS_AJAX){//(前台)结束方案发布
			if(!$_SESSION['userId']) $this->ajaxReturnStatus(999,'请登录!');
			$uid = $_SESSION['userId'];
			$data= I('get.');
			if(isset($data['pro_id'])&& !empty($data['pro_id']) && !empty($data['publish_status'])){
				$where= ['uid'=>$uid,'id'=>$data['pro_id'],'publish_status'=>$data['publish_status']];
				$info = M('SolutionProvider')->where($where)->find();

				if($info){
					$data2= ['publish_status'=>2];
					$rez  = D('SolutionProvider')->where($where)->field('publish_status')->save($data2);
					if($rez ===false){
						$this->ajaxReturnStatus(1029,'操作无效,请稍后再试!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1030,'已结束发布!');
					}else{
						$this->ajaxReturnStatus(1000,'success');
					}
				}
			}else{
				$this->ajaxReturnStatus(1029,'无效操作');
			}
		}
	}
	//	上传我的供应方案(上传方案,修改草稿)
	public function myProviderUpload()
	{
		//访问频率限制
		$user_IP = ($_SERVER["HTTP_VIA"]) ? $_SERVER["HTTP_X_FORWARDED_FOR"] : $_SERVER["REMOTE_ADDR"];
		$allRequest = $this->limit_repeat2(1,'s',$user_IP);
		if($allRequest ==false){
			$this->ajaxReturnStatus(1099,'您的操作过于频繁,请稍作休息');die;
		}
		if(IS_GET && !IS_AJAX){
			//登录验证
			if (empty($_SESSION['userId'])) {
				$this->redirect('Account/login');
			}
			$types = D('solution_type')->select();
			$this->breadcrum();
			$this->assign('sol_types',$types);
            $this->assign('isPlanCenter','1');
			$this->assign('oss_prefix',$this->oss_prefix);
			$this->assign('oss_suffix',$this->oss_suffix);
			$this->display('Solution/myProviderUpload');
		}elseif(IS_POST &&IS_AJAX){
			//$check_vip = $vip->check_vip();
			/*限制重复提交*/
//			$this->limit_repeat(1);
			if(!$_SESSION['userId']) $this->ajaxReturnStatus(999,'请登录!');

			/*非会员限制*/
			$vip = new SolutionVipController;
			$check_vip =$vip->check_vip();
//			if($check_vip!==2)$this->ajaxReturnStatus(1023,'您目前还不是会员');//会员功能之一(暂时停用)
			if($check_vip===0)$this->ajaxReturnStatus(888,'发布方案需要您的基本信息,请补充!');

			/*限制提交需求方案次数*/
			$action_limit = new SolutionModel;

			$data = I('post.');
			$id   = $data['pro_id'];unset($data['pro_id']);
			$draft= $data['draft'];
			$html_path = $data['html_path']?$data['html_path']:'';unset($data['html_path']);
			//数据验证.//处理数据
			$key_word =['types','pcba','pcbas','pcba_list','synopsis','pro_desc','pro_name','main_brand','main_model','imgs','files','code','bom','conver_image'];//关键字
			if($data['imgs']){
				$data['imgs'] = implode(',',$data['imgs']);
			}
			//生成html
			$html_rez = '';
			$data['pro_desc'] = isset($data['pro_desc'])?htmlspecialchars_decode($data['pro_desc']):'';
			if($data['pro_desc'] && !$html_path){//新的
				$html_name = $_SESSION['userId'].time().rand(100,999);
				$html_rez  = $this->create_html($data['pro_desc'],$html_name);

			}elseif($data['pro_desc'] && $html_path){//旧的
				if($data['html_modifier_sign']==1){/*html内容修改了*/
					$html_rez = $this->create_html($data['pro_desc'],$html_path,true);
				}else{
					$html_rez = $html_path;
				}
			}

			if($html_rez !== false){
				$data['pro_desc'] = $html_rez;
			}elseif($html_rez === false){
				$this->ajaxReturnStatus(1019,'保存不成功');
			}
			//不是保存草稿,要验证数据完整性
			if(!isset($data['draft'])){
				foreach($data as $k=>&$v){
					if(!in_array($k,$key_word) || !isset($v)){
						$this->ajaxReturnStatus(1020,'数据有误,提交失败!');
					}
					switch($k){
						case 'pro_desc':continue;break;
						case 'types':
							if(!preg_match("/^\d*$/",$v)){//数字限制
								$this->ajaxReturnStatus(1021,'非标准数据');
							}
							break;
						case 'pro_name'||'main_model'||'main_brand'://长度限制
							if(strlen($v)>100){
								$data[$k] = substr($v,0,100);
								continue;
							};
							break;
						case 'synopsis':
							if(strlen($v)>200){
								$data[$k] = substr($v,0,200);
								continue;
							};
						default:
							$v = trimall($v);
					}
					if($k== 'pro_desc'){
						continue;
					}
				}
			}
//			print_e($data);die;
			$data['uid']=$_SESSION['userId'];

			//保存or提交
			$field  = "pro_sn,pro_name,main_model,main_brand,synopsis,pro_desc,types,pcba,pcbas,pcba_list,conver_image,imgs,bom,code,files,uid,draft";
			if(isset($draft) && $draft ==1){//草稿
				//每日次数限制
				$action_name = $_SESSION['uid'].'prodraft';
				$info = $action_limit->action_limit( $action_name,20,20 );
				if($info=='lock')$this->ajaxReturnStatus(1025,'保存供应方案的次数达到每日上限');

				if(isset($id) && $id){//修改
					$return_data = ['id'=>$id,'html_path'=>$html_rez];//返回的id和html路径
					$rez= D('solution_provider')->where(['id'=>$id,'uid'=>$_SESSION['userId']])->field($field)->save($data);
					if($rez===false)$this->ajaxReturnStatus(1026,'修改失败',$return_data);
					if($rez===0)$this->ajaxReturnStatus(1028,'已保存',$return_data);
					$this->ajaxReturnStatus(1000,'修改成功',$return_data);

				}else{//(第一次)草稿保存
//					print_e($data);die;
					$num   = $this->solSn(1);/*获得供应方案编号*/
					$data['pro_sn'] = $num;
					$rez   = D('solution_provider')->field($field)->add($data);
					if($rez){
						$this->ajaxReturnStatus(1000,'保存成功',['id'=>$rez,'html_path'=>$html_rez]);
					}elseif($rez===false){
						$this->ajaxReturnStatus(1026,'修改失败');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1030,'请勿重复提交');
					}
				}
			}elseif($draft === null||$draft==0){//提交
				//每日次数限制
				$action_name = $_SESSION['uid'].'proUpload';
				$info = $action_limit->action_limit($action_name,20,20);
				if($info=='lock')$this->ajaxReturnStatus(1025,'上传供应方案的次数达到每日上限');

				if(isset($id) && $id){//修改提交
					$data['draft']= 0;
					$rez   = D('solution_provider')->where(['id'=>$id,'uid'=>$_SESSION['userId']])->field($field)->save($data);
					if($rez===false){
						$this->ajaxReturnStatus(1026,'提交不成功!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1029,'请勿重复提交!');
					}else{
						$this->ajaxReturnStatus(1000,'提交成功!',['id'=>$rez,'html_path'=>$html_rez]);
					}
				}else{//(第一次)直接提交
					$num   = $this->solSn(1);/*获得供应方案编号*/
					$data['pro_sn'] = $num;
					$rez   = D('solution_provider')->field($field)->add($data);
					if($rez===false){
						$this->ajaxReturnStatus(1026,'提交不成功!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1028,'请勿重复提交!');
					}else{
						$this->ajaxReturnStatus(1000,'提交成功!',['id'=>$rez,'html_path'=>$html_rez]);
					}
				}
			}
		}
	}
	//	文件上传(文件上传功能转移至SolutionUpload控制器)
//	public function UploadFiles()
//	{
//		//登录验证
//		if (empty($_SESSION['userId'])) {
//			$this->redirect('Account/login');
//		}
//		$data = I('post.');
//		$userId = $_SESSION['userId'];
//
//		$upload = new \Think\Upload();// 实例化上传类
//		$upload->rootPath = './Uploads/'; // 设置附件上传根目录
//		$upload->savePath = $data['path']?$data['path'].'/'.$userId.'/':'Solution/'.$userId.'/';
////		print_e($data);
////		print_e($upload->savePath);die;
//		switch($data['modname']){
//			case 'imgs':
////				$upload->subName ='imgs';
//				$upload->maxSize = 2*1024*1024;
//				$upload->exts = array('jpg','gif','png','jpeg');
//				break;
////			case 'pcba':
////				$upload->subName ='pcba';
////				$upload->maxSize = 20*1024*1024;
////				$upload->exts = array('zip','rar');
////				break;
////			case 'code':
////				$upload->subName ='code';
////				$upload->maxSize = 20*1024*1024;
////				$upload->exts = array('zip','rar');
////				break;
////			case 'files':
////				$upload->subName ='files';
////				$upload->maxSize = 20*1024*1024;
////				$upload->exts = array('txt','jpg','gif','png','jpeg','doc','docx','pdf','xls','xlsx');
////				break;
////			case 'bom':
////				$upload->subName ='BOM';
////				$upload->maxSize = 20*1024*1024;
////				$upload->exts = array('xls','xlsx');
////				break;
//			default:
//				$upload->maxSize = 3*1024*1024;
//				$upload->exts = array('jpg','gif','png','jpeg','bmp','doc','docx','pdf','xlsx','xls','txt','pdf','zip','rar');
////				echo false;
//		}
//		$info =$upload->upload();
//		if(!$info) die(json_encode( ['error' => 1, 'msg' => $upload->getError()]));
//		if($data['modname'] == 'imgs'){//图片压缩
//			$img  = './Uploads/'. $info['file']['savepath'].$info['file']['savename'];
//			$temp = $this->thumb($img,300,300,true,true);
//			if(isset($temp) && $temp != 1){
//				$info['file']['savename'] = $temp;
//			}
//		}
//		die(json_encode(['error'=>0,'msg'=>$info]));
//	}
	//	我的需求方案
	public function myDesired()
	{
		//登录验证
		if (empty($_SESSION['userId'])) {
			$this->redirect('Account/login');
		}
		$uid   = I('session.userId');
		//分页限制
		$page = I( 'get.page' ) ? :1;
		$pageSize= I('get.pageSize')?:4;
		$pageNum = 4;
		$limit	 = ($page-1)*$pageSize.",".$pageNum;

//		$_modal= new SolutionDesiredModel();
		$_modal= D('SolutionDesired');
		$res   = $_modal->myDesiredInfo('','','',$limit);//方案信息
		$count = $_modal->pageCount($uid,'',2);//分页
		$show  = $_modal->pageLimit($count,$pageSize);
		foreach($res as &$v){//去掉具体的时分秒
			$v['update_time']=substr($v['update_time'],0,10);
			$v['delivery']=substr($v['delivery'],0,10);
		}
//		print_e($res);die;
		$this->assign('page',$show);
		$this->assign('res',$res);
        $this->assign('sol_position','3');
		$this->display('Solution/myDesired');
	}
	//	修改需求方案(展示草稿/方案下架)
	public function updataDesired()
	{
		$data= I('get.');
		if(empty($data['desir_id']))die;
		if(IS_GET && !IS_AJAX){
			//登录验证
			if (empty($_SESSION['userId'])) {
				$this->redirect('Account/login');
			}
			$field = 'id,jl_self,desir_sn,desir_name,desir_desc,types,delivery,budget,linkman,mobile,company,uid,draft';
			$where = ['uid'=>$_SESSION['userId'],'id'=>$data['desir_id'],'draft'=>1];
			$res   = M('SolutionDesired')->where($where)->field($field)->find();
			$types = $this->solTypes();
			if(empty($res) ||empty($types))die;
			$this->breadcrum();
			$this->assign('sol_types',$types);
			$this->assign('res',$res);
            $this->assign('isPlanCenter','1');
			$this->display('Solution/updataDesired');
		}elseif(IS_GET && IS_AJAX){
			if($data['publish_status'] != 1)die;
			$where = ['uid'=>$_SESSION['userId'],'id'=>$data['desir_id'],'publish_status'=>1];
			$info  = M("SolutionDesired")->where($where)->find();
			if($info){
				$data2= ['publish_status'=>2];
				$rez  = D('SolutionDesired')->where($where)->field('publish_status')->save($data2);
				if($rez ===false){
					$this->ajaxReturnStatus(1029,'操作无效,请稍后再试!');
				}elseif($rez===0){
					$this->ajaxReturnStatus(1030,'已结束发布!');
				}else{
					$this->ajaxReturnStatus(1000,'success');
				}
			}
		}else{
			$this->ajaxReturnStatus(1029,'无效操作');
		}
	}
	//	上传我的需求方案
	public function myDesiredUpload()
	{
		//访问频率限制
		$user_IP = ($_SERVER["HTTP_VIA"]) ? $_SERVER["HTTP_X_FORWARDED_FOR"] : $_SERVER["REMOTE_ADDR"];
		$allRequest = $this->limit_repeat2(1,'s',$user_IP);
		if($allRequest ==false){
			$this->ajaxReturnStatus(1099,'您的操作过于频繁,请稍作休息');die;
		}
		if(IS_GET && !IS_AJAX){
			//登录验证
			if (empty($_SESSION['userId'])) {
				$this->redirect('Account/login');
			}
			$types = D('solution_type')->select();
			$this->breadcrum();
			$this->assign('sol_types',$types);
            $this->assign('isPlanCenter','1');
			$this->display('Solution/myDesiredUpload');

		}elseif(IS_AJAX && IS_POST){
			if(!$_SESSION['userId']) $this->ajaxReturnStatus(999,'请登录!');

			/*会员检测*/
			$vip = new SolutionVipController;//目前没有.
//			$check_vip = $vip->check_vip();
//			if($check_vip!==2)$this->ajaxReturnStatus(1023,'您目前还不是会员');
			$check_vip =$vip->check_vip();
			//			if($check_vip!==2)$this->ajaxReturnStatus(1023,'您目前还不是会员');//会员功能之一(暂时停用)
			if($check_vip===0)$this->ajaxReturnStatus(888,'发布方案需要您的昵称和手机号等基本信息,请补充!');

			/*限制(非会员)提交需求方案次数*/
			$action_limit = new SolutionModel;
			$info = $action_limit->action_limit($user_IP,20,20);
			if($info=='lock')$this->ajaxReturnStatus(1025,'上传需求方案的次数达到每日上限');

			$data = I('post.');
			$draft= $data['draft'];
			$id   = $data['desir_id'];
			//数据验证
			$data = trimall($data);//print_e($data);
			if(empty($data)|| !is_array($data)){
				$this->ajaxReturnStatus(1022,'数据有误,提交失败!');
			}elseif(empty($draft)){//非草稿数据验证
				foreach($data as $k=>&$v){
					if($k == 'desir_desc')continue;
					if($k == 'draft')continue;
					if(empty($v))$this->ajaxReturnStatus(1020,'数据有误,提交失败!');
					if($k == 'mobile'){
						$isMobile= isMobile2($v);
						if($isMobile===0)$this->ajaxReturnStatus(1021,'手机号码不正确');
					}
					$v = trim($v);
				}
			}
			//保存数据
			$data['uid'] = $_SESSION['userId'];
			//草稿or提交
			$field = 'desir_sn,desir_name,desir_desc,types,delivery,budget,linkman,mobile,company,uid,draft';
			if(empty($draft)){/*提交*/
				$data['draft']= 0;
				if(isset($id) && !empty($id)){/*修改后提交*/
					$rez = D('solution_desired')->where(['uid'=>$_SESSION['userId'],'id'=>$id])->field($field)->save($data);
					if($rez===false){
						$this->ajaxReturnStatus(1026,'提交不成功!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1029,'已保存!');
					}else{
						$this->ajaxReturnStatus(1000,'提交成功!');
					}

				}else{/*首次提交*/
					$desir_sn = $this->solSn(2);/*获得需求方案编号*/
					$data['desir_sn'] = $desir_sn;
					$rez = D('solution_desired')->field($field)->add($data);
					if($rez===false){
						$this->ajaxReturnStatus(1026,'提交不成功!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1029,'已保存!');
					}else{
						$newId = M()->getLastInsID();
						$this->ajaxReturnStatus(1000,'提交成功!',$newId);
					}
				}
			}elseif(!empty($draft) && $draft==1){/*草稿*/
				if(isset($id) && !empty($id)){/*修改后保存*/
					$rez = D('solution_desired')->where(['uid'=>$_SESSION['userId'],'id'=>$id])->field($field)->save($data);
					if($rez===false){
						$this->ajaxReturnStatus(1026,'提交不成功!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1029,'已保存!');
					}else{
						$this->ajaxReturnStatus(1000,'保存成功!',$rez);
					}

				}else{/*首次保存*/
					$desir_sn = $this->solSn(2);/*获得需求方案编号*/
					$data['desir_sn'] = $desir_sn;
					$rez = D('solution_desired')->field($field)->add($data);
					if($rez===false){
						$this->ajaxReturnStatus(1026,'提交不成功!');
					}elseif($rez===0){
						$this->ajaxReturnStatus(1029,'已保存!');
					}else{
						$newId = M()->getLastInsID();
						$this->ajaxReturnStatus(1000,'保存成功!',$newId);
					}
				}
			}
		}
	}

	/*
	 * 合并两个数组,并去掉值为空的数据
	 * param:两个多维数组
	 * return 合并后的值,或者false
	 * */
	public function deletNull($res,$res2)//函数封装
	{
		if(!empty($res) && !empty($res2)){
			$tempdata =[];
			foreach($res as $k => &$v){
				foreach($v as $key =>$value){
					if(is_array($value)){
						$this->deletNull($value);
					}elseif(is_null($value)){
						unset($v[$key]);
					}
				}
				$tempdata[] = $v;
			}
			foreach($res2 as $k => &$v){
				foreach($v as $key =>$value){
					if(is_array($value)){
						$this->deletNull($value);
					}elseif(is_null($value)){
						unset($v[$key]);
					}
				}
				$tempdata[] = $v;
			}
			return $tempdata;
		}elseif(empty($res) && !empty($res2)){
			foreach($res as $k => &$v){/*删除空值*/
				foreach($v as $key => $value){
					if(is_null($value)){
						unset($v[$key]);
					}
				}
			}
			return $res2;
		}elseif(empty($res2) && !empty($res)){
			foreach($res as $k => &$v){/*删除空值*/
				foreach($v as $key => $value){
					if(is_null($value)){
						unset($v[$key]);
					}
				}
			}
			return $res;
		}else{
			return false;
		}
			}
	//	生成html文档;
	//当$update=true,参数为修改文件:$data是数据;$name是旧文件地址,
	//当$update=false,参数为创建新文件:$data是数据;$name是文件地址,
	private function create_html($data,$name,$update=false)
	{
		if($update==false){
			$content = $data;
			//print_e($content);die;
			$the_date=date('Ymd',time());
			$root_path = $_SERVER['DOCUMENT_ROOT'];//绝对路径根目录
			$content_path =$root_path. '/Uploads/htmls/'.$the_date.'/';//文件夹
			if(!is_dir($content_path)){
				$rez = mkdir($content_path,0777,true);
			}
			$base_path = '/Uploads/htmls/'.$the_date.'/'.$name.'.html';//文件路径
			$file_path = $root_path.$base_path;//绝对路径
			$files_new = fopen($file_path,'w+');//开始写入
			$write_new = fwrite($files_new,$content);
			$colse_new = fclose($files_new);
			//print_e($file_path);dump($files_new);dump($write_new);die;
			if($files_new && $write_new ){
				return $base_path;
			}else{
				return false;
			}
			die('创建成功');
		}elseif($update==true){
			$temp = file_put_contents('.'.$name,$data,LOCK_EX);
			if(!$temp) return false;
			return $name;
		}
	}
	/*生成方案编号*/
	public function solSn($type)
	{
		$sn = new SolutionModel;
		$num= $sn->sn_factory($type);
		if($num['error']==0){
			$sol_sn= $num['data']['one'];
			return $sol_sn;
		}
	}
	/*限制重复提交*/
	/*$time:时间限制 ;$type时间单位(默认分钟) s秒|m分|h时|d天| ; $action应用次数多时取一个别名*/
	public function limit_repeat($time,$type='m',$action='act_last_time')
	{
		$_time=60;
		$actions = $action;
		switch($type){
			case 's':$_time=1;break;
			case 'm':continue;break;
			case 'h':$_time=$_time*60;break;
			case 'd':$_time=$_time*60*24;break;
		}
		if(!empty(session($actions))){
			if(floor((time()-(int)session($actions))/$_time)<$time){
				$this->ajaxReturnStatus(1027, '请勿重复提交数据');
				die('操作频繁');
			}else{
				$t = (int)time();
				session($actions,$t);
			}
		}else{
			$t = (int)time();
			session($actions,$t);
		}
	}
	/*$time时间限制;$type时间类型,$action限制的行为*/
	public function limit_repeat2($time,$type='m',$action)
	{
		$_time=60;
		$actions = $_SESSION['userId'].'_'.$action;
		switch($type){
			case 's':$_time=1;break;
			case 'm':continue;break;
			case 'h':$_time=$_time*60;break;
			case 'd':$_time=$_time*60*24;break;
		}
		$t = $_time*$time;
		$redis 	= Redis::getInstance();
		$temp1	= $redis->get($actions);
		if(empty($temp1)){
			$temp=$redis->set($actions,'2',$t);
			return true ;
		}else{
			return false;
		}
	}
	/*简易面包屑*/
	private function breadcrum()
	{
		//简易版面包屑导航系统
		$last_url = $_SERVER['HTTP_REFERER'];//前一个url
		//		$last_url = substr($last_url,20);
		//		$last_ff  = trim(strrchr($last_url, '/'),'/');
		//		$last_ff  = substr($last_ff,0,strpos($last_ff,'.'));
		//		print_e($last_ff);
		$local_url= $_SERVER['REQUEST_URI'];//当前url
		$local_ff = trim(strrchr($local_url, '/'),'/');
		$local_ff = substr($local_ff,0,strpos($local_ff,'.'));
		//print_e($_SERVER);
		//print_e(strrchr($local_url, '/'));
		//print_e(trim(strrchr($local_url, '/'),'/'));
		//print_e(strpos($local_ff,'.'));
		//print_e(substr($local_ff,0,strpos($local_ff,'.')));
		$cata_arr =[0=>'myProviderUpload',
			1=>'myDesiredUpload',
			2=>'myProvider',
			3=>'myDesired',
			4=>'myBrowse',
			5=>'solCollectList',
			6=>'converse',
			7=>'vipIndex',
			8=>'vipProvider',
			9=>'converse'
		];
		//$msg_type = ['audit','conversing','conversed'];//审核动作,接洽动作(洽谈内容),被洽谈动作(是否接受洽谈)
		$breadArr = [
			'发布方案'  =>[ $cata_arr[0]=>'上传供应方案',
				$cata_arr[1]=>'上传需求方案'],
			'我的方案'  =>[ $cata_arr[2]=>'我的供应方案',
				$cata_arr[3]=>'我的需求方案'],
			'参与的方案'=>[ $cata_arr[4]=>'我看过的方案',
				$cata_arr[5]=>'我收藏的方案',
				$cata_arr[6]=>'我洽谈的方案'],
			'会员中心'  =>[ $cata_arr[7]=>'我的联系方式',
				$cata_arr[8]=>'会员信息展示']
		];
		$bread2 = "<div id='jl-brand'>
					<ul class='jl-brand-url'>
						<li>您的位置 <span> ></span></li>
						<li><a href=".U('Home/Default/index').">首页</a><span>></span></li>
						<li><a href=".U('Home/Solution/provider').">方案中心</a> <span>></span></li>
						<li><a href=".U('Home/SolutionVip/vipProvider').">项目管理中心</a><span>></span></li>";
		$bread3 = "</ul></div>";
		$bread1 ="";
		foreach($breadArr as $k1=>$v1){
			foreach($v1 as $k2=>$v2){
				if($k2==$local_ff){
					$bread1 = "<li><a href=\"javascript:;\">$k1</a> <span> ></span></li>
							<li><a href="."javascript:location.reload();"." >$v2</a><span>></span></li>";
				}}}
		$breadcrum = $bread2.$bread1.$bread3;
		//print_e($breadcrum);die;
		$this->assign('breadcrum',$breadcrum);
	}
}
?>
