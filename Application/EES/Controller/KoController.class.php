<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017-12-29
 * Time: 16:28
 */

namespace EES\Controller;

use EES\Model\ErpUserModel;
use EES\Model\OrderModel;
use EES\Model\RetreatSyncLogModel;
use EES\Model\UserModel;
use EES\Model\OrderSyncLogModel;
use EES\System\Redis;
use think\Log;
use Common\Controller\Address;
use Admin\Model\RetreatModel;
use Home\Controller\KdController;
use Common\Controller\KdApiController as KdApi;

class KoController extends EESController
{
	use Address;
	
	protected function _initialize()
	{
 
		parent::_initialize(); // TODO: Change the autogenerated stub
	}
	public function knotStateComplate(){
        //file_put_contents('99.txt','shisusijsi');
		$order=M('order')->where(['knot'=>2,'order_status'=>['in',[0,2]]])->select();
		foreach ($order as $v){
			 $model=M();
             $model->startTrans();
          	 $save=orderStatus($v['order_sn']);
              $res=M('order')->where(['order_sn'=>$v['order_sn']])->save($save);
              if($res===false){
                  $model->rollback();
              }else{
                  $model->commit();
              }
		}
	}
	
	public function  kdStateComplate(){
		$time = strtotime("now");
		$hyInfo=  M('order_sync_hy')->where(['is_lock'=>['neq',0],'is_kd'=>1,'hy_num'=>['neq',''],'is_recive'=>0,'update_time'=>['ELT',$time]])->select();
		foreach ($hyInfo as $v){
           $model=M();
           $model->startTrans();
		   $res=M('order_sync_hy')->where(['order_no'=>$v['order_no'],'erp_th_no'=>$v['erp_th_no']])->save(['is_recive'=>1]);
           if($res===false){
           		$model->rollback();
           }
			$save=orderStatus($v['order_no']);
            $res1=M('order')->where(['order_sn'=>$v['order_no']])->save($save);
            if($res1===false){
           		$model->rollback();
          	}else{
           		$model->commit();
           	}
		}
		
		
	}
	
	

	

}