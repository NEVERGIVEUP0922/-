<?php


// +----------------------------------------------------------------------
// | FileName:   OrderController.class.bak.20170906.php
// +----------------------------------------------------------------------
// | Dscription:
// +----------------------------------------------------------------------
// | Date:  2017/8/22 15:14
// +----------------------------------------------------------------------
// | Author: showkw <showkw@163.com>
// +----------------------------------------------------------------------
namespace  Admin\Controller;
use Common\Controller\BaseController;
use Common\Controller\Category;
use EES\System\Redis;

class OrderController extends AdminController
{

	public static $order;

	protected function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
		self::$order = D('order');
	}


    /**
     * @desc 订单列表
     */
    public function orderList()
    {
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:20;
        $where=$request['where'];

        if($where){
            $whereResult=(new \Admin\model\BaseModel())->searchWhere($where);
            if($whereResult['error']!=0) die(json_encode($whereResult));
            $where=$whereResult['data'];
        }
        unset($where['user_id_name']);

        if(isset($request['order_sn'])||isset($request['order_sn'])) $where['order_sn']=$request['order_sn'];

        if(isset($where['create_at_start'])||isset($where['create_at_end'])){//下单时间查询
            $create_at_start=$where['create_at_start']?:'0000-00-00 00:00:00';
            $create_at_end=$where['create_at_end']?date('Y-m-d 00:00:00',strtotime('+1 day',strtotime($where['create_at_end']))):'3000-00-00 00:00:00';
            $where['create_at']=['between',[$create_at_start,$create_at_end]];
            unset($where['create_at_start']);
            unset($where['create_at_end']);
        }

        if($request['ship_status']==500){
            $where['ship_status']=['in',[1,2,3]];
        }

        if(isset($request['show'])&&$request['show']=='depositReceipts'){//应收列表
            $where[]=['order_status'=>['in',[0,1,2,3]]];
        }

        //排序
        $field='';
        $sort=$request['sort']?:'';
        if(strpos($sort,'fcustjc')!==false){
            $customer=M('user')->field('id')->order($sort)->select();
            $customer_str='';
            foreach($customer as $k=>$v){
                $customer_str.=','.$v['id'];
            }
            $sort="field(user_id$customer_str)";
        }

        //产品部的订单
        $product_where=[];
        $session=session();
        $department_id=$session['adminInfo']['department_id'];
        $list=D('user')->userDepartments(C('DATA_POWER.product'));//产品部门的部门
        $productDepartmentId_arr=[];
        if($list['data']['son']){
            foreach($list['data']['son'] as $k=>$v){
                $productDepartmentId_arr[]=$v['id'];
            }
        }
        $productDepartmentId_arr[]=$list['data']['self']['id'];
        if(in_array($department_id,$productDepartmentId_arr)){//是产品部门的人
            $slaveList=D('user')->userSlaveList($session['adminId'],'slaveId_arr');
            $productAdminId_arr=$slaveList['data']['list'];
            $productList=M('product')->field('id')->where(['person_liable'=>['in',$productAdminId_arr]])->select();
            $productId_arr=[];
            foreach($productList as $k=>$v){
                $productId_arr[]=$v['id'];
            }
            if($productId_arr){
                $product_where=[ 'p_id'=>['in',$productId_arr] ];
            }
            $orderField=M('order_goods')->field('order_sn')->where(['p_id'=>['in',$productId_arr]])->group('order_sn')->select();
            $orderSn_arr=[];
            foreach($orderField as $k=>$v){
                $orderSn_arr[]=$v['order_sn'];
            }
            $order_where=['order_sn'=>['in',$orderSn_arr]];
        }
        if($product_where){
            $where=$where?[$where,$order_where]:$order_where;
        }

        $saleId=$where['saleId'];
        if(isset($request['where']['saleId']['value'])&&$request['where']['saleId']['value']){
            $saleId=$request['where']['saleId']['value'];
        }
        unset($where['saleId']);
        if($saleId){//业务员搜素
            $users=M('user')->field('id')->where(['sys_uid'=>$saleId])->select();
            $userId_arr=[];
            if($users){
                foreach($users as $k=>$v){
                    $userId_arr[]=$v['id'];
                }
            }
            $where['user_id']=['in',$userId_arr];
        }

        if(isset($request['where']['user_id']['value'])&&$request['where']['user_id']['value']){
            $where[]['user_id']=$request['where']['user_id']['value'];
        }

        $goodsFitemno=[];
        if(isset($request['changeGoodsFitemno'])&&$request['changeGoodsFitemno']){//定单商品换erp型号
            $orderEvent=D('order','Event');
            $order_sn=$request['changeGoodsFitemno'];
            $goodsFitemno=$orderEvent->orderFitemnoList($order_sn);
        }

        if(isset($request['order_status'])) $where['order_status']=$request['order_status'];//订单状态

        $result=D('order')->orderList($where,$page,$pageSize,$sort,1,$product_where,$st=1,$field);
        $orderList=$result['data'];
        $orderList['page'] = $page;
        $orderList['pageSize'] = $pageSize;
        $this->assign('request',$request);
        $this->assign('orderList',$orderList);
        $this->assign('goodsFitemno',$goodsFitemno);
        $this->display($request['show']);
    }
	
	//解锁提货单号
	public function ajaxTH()
	{
		//file_put_contents('t444tt.txt','444');
		$Model = M();
		$Model->startTrans();
		//接收数据
		$request=I('post.');
		//订单号
		$order_sn=$request['order_sn'];
		//orderStatus($order_sn);die();
		
		//$order_sn='1804231052014';
		//erp编号
		$erp_th_no=$request['erp_th_no'];
		//$erp_th_no='TC1524471370144';
		if(!$order_sn) die(json_encode(['error'=>1,'msg'=>'参数错误']));
		if(!$erp_th_no) die(json_encode(['error'=>1,'msg'=>'参数错误1']));
		//if(!in_array($order_status,[0,100])) die(json_encode(['error'=>1,'msg'=>'参数错误2']));
		//按订单号 提货号 状态搜索数据
		$hyinfo=M('order_sync_hy')->where(['order_no'=>$order_sn,'erp_th_no'=>$erp_th_no,'is_lock'=>2,'c_recive'=>0])->find();
		if(!$hyinfo){
			//没查询到数据
			die(json_encode(['error'=>1,'msg'=>'非法操作']));
		}else{
			$datail=json_decode($hyinfo['detail'],true);
			foreach ($datail as $v){
                if($v['fissample']=='Y'){
                   // $res2=M('order_goods')->where(['fitemno_sync'=>$v['fitemno'],'order_sn'=>$change['order_no'],'pay_subtotal'=>['elt',0]])->save(['knot_num'=>$v['fcancelqty']]);

                    $orderG = M( 'order_goods' )->field( 'erp_num' )->where( [ 'order_sn' =>$order_sn, 'fitemno_sync' => $v[ 'fitemno' ],'pay_subtotal'=>['elt',0] ] )->find();
                    $erp_num=$orderG['erp_num']-$v['fqty'];
                    if((int)$erp_num>=0){
                        $res = M( 'order_goods' )->where( [ 'order_sn' => $order_sn, 'fitemno_sync' => $v[ 'fitemno' ] ,'pay_subtotal'=>['elt',0]] )->save( [ 'erp_num' => $erp_num ] );
                        if($res===false){
                            $Model->rollback();
                            die(json_encode(['error'=>1,'msg'=>'解锁失败']));
                        }
                    }


                }else{
                    $orderG = M( 'order_goods' )->field( 'erp_num' )->where( [ 'order_sn' =>$order_sn, 'fitemno_sync' => $v[ 'fitemno' ],'pay_subtotal'=>['gt',0] ] )->find();
                    $erp_num=$orderG['erp_num']-$v['fqty'];
                    if((int)$erp_num>=0){
                        $res = M( 'order_goods' )->where( [ 'order_sn' => $order_sn, 'fitemno_sync' => $v[ 'fitemno' ] ,'pay_subtotal'=>['gt',0]] )->save( [ 'erp_num' => $erp_num ] );
                        if($res===false){
                            $Model->rollback();
                            die(json_encode(['error'=>1,'msg'=>'解锁失败']));
                        }
                    }

                }

			}
		}
		$res=M('order_sync_hy')->where(['order_no'=>$order_sn,'erp_th_no'=>$erp_th_no])->delete();
		
		if($res===false){
			$Model->rollback();
			die(json_encode(['error'=>1,'msg'=>'解锁失败']));
		}else{
			$ordersave=orderStatus($order_sn);
			
			$res=M('order')->where(['order_sn'=>$order_sn])->save($ordersave);
			if($res===false){
				$Model->rollback();
				die(json_encode(['error'=>1,'msg'=>'解锁失败']));
			}
		}
		$Model->commit();
		die(json_encode(['error'=>0,'msg'=>'解锁成功']));
	}
	
	public function checkOrder()
    {
        if(IS_AJAX){
            $request=I('post.');
            $order_sn=$request['order_sn'];
            $order_status=$request['order_status'];//0通过,100不通过
            if(!$order_sn) die(json_encode(['error'=>1,'msg'=>'参数错误1']));
            if(!in_array($order_status,[0,100])) die(json_encode(['error'=>1,'msg'=>'参数错误2']));
			$orderData=M('order')->where(['order_sn'=>$order_sn])->find();
            if($orderData['order_status']==100){
					die(json_encode(['error'=>1,'msg'=>$order_sn.'----订单已经删除']));
            }
			if($orderData['pay_type']!=1){
				$orderSync = M('order_sync');
				if(!($orderSync->where(['order_sn'=>$order_sn])->find())){
					$res = $orderSync->add([ 'order_sn'=>$order_sn ]);
					if($res === false )  die(json_encode(['error'=>1,'msg'=>$order_sn.'----订单信息同步写入数据库失败']));
				}
				$redis = Redis::getInstance();
				$rs = $redis->sAdd( 'shopOrderSyncList', $order_sn );
				if($rs === false ){
					die(json_encode(['error'=>1,'msg'=>$order_sn.'----订单信息带同步失败!请检查缓存']));
				}else{
					$where=['order_sn'=>$order_sn,'order_status'=>1];
					$result=D('order')->changeOrderStatus($where,$order_status);
					die(json_encode($result));
				}
			}else{
				$where=['order_sn'=>$order_sn,'order_status'=>1];
				$result=D('order')->changeOrderStatus($where,$order_status);
				die(json_encode($result));
			}
			
        }
    }

    /**
     *
     * @desc 水单列表
     *
     */
    public function payImgList(){
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:C('PAGE_PAGESIZE');
        $where='';

        if(isset($request['sale_name'])&&$request['sale_name']){
            $where[]='order_sn in (select order_sn from dx_order where user_id in(select id from dx_user where sys_uid in(select uid from sys_user where fullname like "%'.$request['sale_name'].'%" or uid like "%'.$request['sale_name'].'%") ))';
        }

        if(isset($request['user_id'])&&$request['user_id']){
            $where['user_id']=['in',$request['user_id']];
        }else if(isset($request['user_id_name'])&&$request['user_id_name']){
            $request['user_name']=$request['user_id_name'];
            $where[]='order_sn in (select order_sn from dx_order where user_id in(select id from dx_user where nick_name like "%'.$request['user_name'].'%" or fcustjc like "%'.$request['user_name'].'%" or nick_name like "%'.$request['user_name'].'%" ))';
        }

        if(isset($request['saleId'])&&$request['saleId']){
            $admins=M('user','sys_')->field('uid')->where(['saleId'=>['like',"%$request[saleId]%"]])->select();//业务员
            if($admins){
                $adminId_arr=[];
                foreach($admins as $k=>$v){
                    $adminId_arr[]=$v['uid'];
                }
                $where['sys_uid']=['in',$adminId_arr];
            }
        }

        $result=D('orderpayhistory')->payImgList($where,$page,$pageSize,'id desc','',['dx_order_pay_history']);
        $result['data']['page'] = $page;
        $result['data']['pageSize'] = $pageSize;
        $this->assign('request',$request);
        $this->assign('list',$result['data']);
        $this->display();
    }

    /**
     *
     * @desc 水单审核
     *
        $request=[
            'id'=>8,
            'status'=>2,//不通过1
            'pay_amount'=>115,
        ];
     *
     */
    public function payImgAction(){
        if(IS_AJAX){
            $request=I('post.');
            $result=D('orderpayhistory')->payImgAction($request);
            die(json_encode($result));
        }
    }

    /**
     *
     * @desc 后台添加支付信息
     *
     */
    public function adminToPay(){
        if(IS_AJAX){
            $request=I('post.');
            $result=D('orderpayhistory')->adminToPay($request);
            die(json_encode($result));
        }
    }

    /**
     *
     * @desc 支付历史列表
     *
     */
    public function payHistoryList(){
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:C('PAGE_PAGESIZE');
        $where='';
        $result=D('orderpayhistory')->payHistoryList($where,$page,$pageSize);
        $list=$result['data'];
        $list['page'] = $page;
        $list['pageSize'] = $pageSize;
        $this->assign('list',$list);
        $this->display();
    }

    /**
     * @desc 产品销售信息统计
     *
     */
    public function productSaleCountInfo(){
        if(IS_AJAX){
            $request=I('post.');
            $list=D('order')->productSaleCountInfo($request);
            die(json_encode($list));
        }
    }

    /**
     * @desc 待确认帐期还款列表
     */
    public function accountPayList(){
        $request=I('get.');
        $page=$request['page']?$request['page']:1;
        $pageSize=$request['pageSize']?$request['pageSize']:C('PAGE_PAGESIZE');
        $where=[];
        if(isset($request['order_sn'])&&$request['order_sn']) $where['u.order_sn']=$request['order_sn'];
        if(isset($request['is_invoice'])&&$request['is_invoice']) $where['u.is_invoice']=$request['is_invoice'];
        if(isset($request['user_id'])&&$request['user_id']) $where['u.user_id']=$request['user_id'];

        if(isset($request['sale'])&&$request['sale']){
            $saleId=$request['sale'];
            if($saleId){//业务员搜素
                $users=M('user')->field('id')->where(['sys_uid'=>$saleId])->select();
                $userId_arr=[];
                if($users){
                    foreach($users as $k=>$v){
                        $userId_arr[]=$v['id'];
                    }
                }
                $where['u.user_id']=['in',$userId_arr];
            }
        }

        if(isset($request['order_status'])&&$request['order_status']){
            $where[]="order_sn in (select order_sn from dx_order where order_status=$request[order_status])";
        }

        $result=D('orderpayhistory')->accountPayList($where,$page,$pageSize);

        $list=$result['data'];
        $list['page'] = $page;
        $list['pageSize'] = $pageSize;
        $this->assign('list',$list);
        $this->assign('request',$request);
        $this->display();
    }

    /**
     * @desc 定单换商品换erp型号
     * @arguments:
     *          $request['order_sn']='1805081022662';
                $request['goodsList']=[
                    [
                        'p_sign'=>'IA1101-33A23X',
                        'fitemno'=>'MBR20100(HJ)-TO220F',
                    ]
                ];
     */
    public function orderChangeFitemno(){
        if(IS_AJAX){
            $request=I('post.');
            $result=D('order')->orderChangeFitemno($request);
            die(json_encode($result));
        }
    }
	
	public function  delErpOrder(){
		$order_sn =I('order_sn');
		empty( $order_sn ) && $this->ajaxReturnStatus(1000, '缺省订单编号');
		
		$order_sync=M('order_sync')->where(['order_sn'=>$order_sn])->find();
		if($order_sync['sync_status']==0||$order_sync['sync_status']==2||empty($order_sync)){
			$this->ajaxReturnStatus(1000, '订单未同步到ERP');
		}
		
//		$order=M('order')->where(['order_sn'=>$order_sn,'order_status'=>['IN',[100,101]]])->find();
//		if(!$order){
//			$this->ajaxReturnStatus(1000, '商城订单不是删除状态');
//		}
		M()->startTrans();
		$order=M('order')->where(['order_sn'=>$order_sn])->find();
		//print_r($order);
		if($order['order_status']==100||$order['order_status']==101){
			if($order['delstatus']==1){
				M()->rollback();
				$this->ajaxReturnStatus(1000, 'ERP订单删除成功');
			}elseif($order['delstatus']==3){
				M()->rollback();
				$this->ajaxReturnStatus(1000, 'ERP订单成功中');
			}else{
				$odel=M('order')->where(['order_sn'=>$order_sn])->save(['delstatus'=>3]);
				if($odel===false){
					M()->rollback();
					$this->ajaxReturnStatus(1000, '更新订单删除状态失败');
				}
			}
		}else{
			M()->rollback();
			$this->ajaxReturnStatus(1000, '商城订单不是删除状态');
		}
		
		
		$key='delOrderSyncList';
		$res = Redis::getInstance()->sAdd($key, $order_sn);
		
		if( $res !== false ){
			if( $res == 0 ){
				M()->rollback();
				$this->ajaxReturnStatus(1000, '该订单已存在同步队列!<br>正在同步处理中!<br>请勿重复添加!');
			}
			M()->commit();
			$this->ajaxReturnStatus(0, '添加到订单同步队列成功!');
		}else{
			M()->rollback();
			$this->ajaxReturnStatus(1000, '添加到同步队列失败!');
		}
	}

    /**
     * @desc 定单价格重置
     * @param orderSn  定单编号
     * @param  pId_change[     改价的产品
     *      [
     *          p_id=>1,
     *          p_num=>100,
     *          p_price_true=>100,
     *      ]
     * ]
     *
     */
    public function orderPriceReset(){
        if(IS_AJAX){
            $request=I('post.');
            $result=D('order')->orderPriceReset($request);//保存数据
            die(json_encode($result));
        }
    }


}